"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var show_hide_1 = __importDefault(require("../utils/show-hide"));
var selectors = {
    component: '.js-disclosure',
    toggle: '.js-disclosure-toggle',
};
var classes = {
    toggleWhenHidden: 'cads-icon_plus',
    toggleWhenShowing: 'cads-icon_minus',
    elementIsOpen: 'cads-disclosure__details--open',
};
var attributes = {
    labelWhenHidden: 'data-label-when-hiding',
    labelWhenShowing: 'data-label-when-showing',
    target: 'data-toggle-target-id',
};
var disclosureSelectors = {
    summary: '.js-disclosure-summary',
    details: '.js-disclosure-details',
};
var disclosureAttributes = {
    closedSummary: 'data-closed-summary',
    openSummary: 'data-open-summary',
};
function initDisclosureToggle(disclosure) {
    var toggle = disclosure.querySelector(selectors.toggle);
    var summary = disclosure.querySelector(disclosureSelectors.summary);
    var details = disclosure.querySelector(disclosureSelectors.details);
    toggle === null || toggle === void 0 ? void 0 : toggle.addEventListener('click', function () {
        if (toggle && summary && details) {
            if (details.classList.contains(classes.elementIsOpen)) {
                summary.textContent = toggle.getAttribute(disclosureAttributes.openSummary);
            }
            else {
                summary.textContent = toggle.getAttribute(disclosureAttributes.closedSummary);
            }
        }
    });
}
var initDisclosure = function () {
    if (selectors.component) {
        (0, show_hide_1.default)(selectors, classes, attributes);
    }
    var disclosures = document.querySelectorAll(selectors.component);
    for (var i = 0; i < disclosures.length; i++) {
        var disclosure = disclosures[i];
        initDisclosureToggle(disclosure);
    }
};
exports.default = initDisclosure;
